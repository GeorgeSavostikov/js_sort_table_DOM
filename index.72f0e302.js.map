{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCIA,IAAM,EAAe,SAAS,aAAa,CAAC,SAE5C,EAAa,gBAAgB,CAAC,QAAS,SAAC,CAAxC,EACE,IAAM,EAAc,SAAS,aAAa,CAAC,SAGrC,EAAO,AAFK,EAAG,EAAY,IAAI,EAEf,GAAG,CAAC,SAAC,CAA3B,EAQE,MAPkB,CAChB,KAAM,EAAU,KAAK,CAAC,EAAE,CAAC,WAAW,CACpC,SAAU,EAAU,KAAK,CAAC,EAAE,CAAC,WAAW,CACxC,IAAK,EAAU,KAAK,CAAC,EAAE,CAAC,WAAW,CACnC,OAAQ,EAAU,KAAK,CAAC,EAAE,CAAC,WAAW,AACxC,CAGF,GAEA,EAAY,MAAM,GAElB,IAAM,EAAiB,SAAS,aAAa,CAAC,SAE9C,EAAa,KAAK,CAAC,KAAK,CAAC,GAEzB,IAAI,EAAa,EAAE,CAEnB,OAAQ,EAAE,MAAM,CAAC,WAAW,EAC1B,IAAK,OACH,EAAc,EAAG,GAAM,IAAI,CAAC,SAAC,CAAA,CAAK,CAAlC,EACE,OAAO,EAAI,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC,EAAI,IAAI,CAAC,WAAW,GAClE,GACA,KAGF,KAAK,WACH,EAAc,EAAG,GAAM,IAAI,CAAC,SAAC,CAAA,CAAK,CAAlC,EACE,OAAO,EAAI,QAAQ,CAChB,WAAW,GACX,aAAa,CAAC,EAAI,QAAQ,CAAC,WAAW,GAC3C,GACA,KAGF,KAAK,MACH,EAAc,EAAG,GAAM,IAAI,CAAC,SAAC,CAAA,CAAK,CAAlC,EAA0C,MAAA,CAAC,EAAI,GAAG,CAAG,CAAC,EAAI,GAAG,A,GAC7D,KAGF,KAAK,SACH,EAAc,EAAG,GAAM,IAAI,CACzB,SAAC,CAAA,CAAK,CADR,EAEI,MAAA,CAAC,EAAI,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,KAAK,IAAI,CAAC,IACrC,CAAC,EAAI,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,KAAK,IAAI,CAAC,G,GAEzC,KAGF,SACE,EAAc,EAAG,EAErB,CAeA,AAboB,EAAW,GAAG,CAAC,SAAC,CAApC,EACE,IAAM,EAAY,SAAS,aAAa,CAAC,MAEzC,IAAK,IAAM,KAAY,EAAI,CACzB,IAAM,EAAY,SAAS,aAAa,CAAC,KAEzC,CAAA,EAAU,WAAW,CAAG,CAAE,CAAC,EAAS,CACpC,EAAU,MAAM,CAAC,EACnB,CAEA,OAAO,CACT,GAEY,OAAO,CAAC,SAAC,CAArB,EACE,EAAe,MAAM,CAAC,EACxB,EACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\n// ASC - сортіровко за зростанням\nvar tableElement = document.querySelector(\"table\");\ntableElement.addEventListener(\"click\", function(e) {\n    var bodyElement = document.querySelector(\"tbody\");\n    var bodyRows = _to_consumable_array(bodyElement.rows);\n    var data = bodyRows.map(function(trElement) {\n        var newObject = {\n            name: trElement.cells[0].textContent,\n            position: trElement.cells[1].textContent,\n            age: trElement.cells[2].textContent,\n            salary: trElement.cells[3].textContent\n        };\n        return newObject;\n    });\n    bodyElement.remove();\n    var newBodyElement = document.createElement(\"tbody\");\n    tableElement.tHead.after(newBodyElement);\n    var sortedData = [];\n    switch(e.target.textContent){\n        case \"Name\":\n            sortedData = _to_consumable_array(data).sort(function(el1, el2) {\n                return el1.name.toLowerCase().localeCompare(el2.name.toLowerCase());\n            });\n            break;\n        case \"Position\":\n            sortedData = _to_consumable_array(data).sort(function(el1, el2) {\n                return el1.position.toLowerCase().localeCompare(el2.position.toLowerCase());\n            });\n            break;\n        case \"Age\":\n            sortedData = _to_consumable_array(data).sort(function(el1, el2) {\n                return +el1.age - +el2.age;\n            });\n            break;\n        case \"Salary\":\n            sortedData = _to_consumable_array(data).sort(function(el1, el2) {\n                return +el1.salary.slice(1).split(\",\").join(\"\") - +el2.salary.slice(1).split(\",\").join(\"\");\n            });\n            break;\n        default:\n            sortedData = _to_consumable_array(data);\n    }\n    var newElements = sortedData.map(function(el) {\n        var trElement = document.createElement(\"tr\");\n        for(var property in el){\n            var thElement = document.createElement(\"td\");\n            thElement.textContent = el[property];\n            trElement.append(thElement);\n        }\n        return trElement;\n    });\n    newElements.forEach(function(corEl) {\n        newBodyElement.append(corEl);\n    });\n});\n\n//# sourceMappingURL=index.72f0e302.js.map\n","'use strict';\n\n// ASC - сортіровко за зростанням\n\nconst tableElement = document.querySelector('table');\n\ntableElement.addEventListener('click', (e) => {\n  const bodyElement = document.querySelector('tbody');\n  const bodyRows = [...bodyElement.rows];\n\n  const data = bodyRows.map((trElement) => {\n    const newObject = {\n      name: trElement.cells[0].textContent,\n      position: trElement.cells[1].textContent,\n      age: trElement.cells[2].textContent,\n      salary: trElement.cells[3].textContent,\n    };\n\n    return newObject;\n  });\n\n  bodyElement.remove();\n\n  const newBodyElement = document.createElement('tbody');\n\n  tableElement.tHead.after(newBodyElement);\n\n  let sortedData = [];\n\n  switch (e.target.textContent) {\n    case 'Name': {\n      sortedData = [...data].sort((el1, el2) => {\n        return el1.name.toLowerCase().localeCompare(el2.name.toLowerCase());\n      });\n      break;\n    }\n\n    case 'Position': {\n      sortedData = [...data].sort((el1, el2) => {\n        return el1.position\n          .toLowerCase()\n          .localeCompare(el2.position.toLowerCase());\n      });\n      break;\n    }\n\n    case 'Age': {\n      sortedData = [...data].sort((el1, el2) => +el1.age - +el2.age);\n      break;\n    }\n\n    case 'Salary': {\n      sortedData = [...data].sort(\n        (el1, el2) =>\n          +el1.salary.slice(1).split(',').join('') -\n          +el2.salary.slice(1).split(',').join(''),\n      );\n      break;\n    }\n\n    default: {\n      sortedData = [...data];\n    }\n  }\n\n  const newElements = sortedData.map((el) => {\n    const trElement = document.createElement('tr');\n\n    for (const property in el) {\n      const thElement = document.createElement('td');\n\n      thElement.textContent = el[property];\n      trElement.append(thElement);\n    }\n\n    return trElement;\n  });\n\n  newElements.forEach((corEl) => {\n    newBodyElement.append(corEl);\n  });\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","tableElement","document","querySelector","addEventListener","e","bodyElement","data","bodyRows","rows","map","trElement","cells","textContent","position","age","salary","remove","newBodyElement","createElement","tHead","after","sortedData","target","sort","el1","el2","toLowerCase","localeCompare","split","join","newElements","el","property","thElement","append","forEach","corEl"],"version":3,"file":"index.72f0e302.js.map"}